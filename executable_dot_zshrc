# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

#---------------------------------------------------------------------------------------------------
# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.  DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8


# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.

#----------------------------------------------------------------------------------------------------
#Starts X if in login shell
#if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then
#  exec startx
#fi

export PATH=$HOME/.local/bin:/usr/local/bin:$HOME/scripts/:$HOME/Games/:$PATH
export ZSH="/home/arsonstan/.oh-my-zsh"

ZSH_THEME="powerlevel10k/powerlevel10k"
# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git zsh-autosuggestions zsh-syntax-highlighting zsh-completions)
export LESS='--quit-if-one-screen --ignore-case --status-column --LONG-PROMPT --RAW-CONTROL-CHARS --HILITE-UNREAD --tabs=4 --no-init --window=-4 -R --use-color -Dd+r$Du+b'
export EDITOR='nvim'
export PAGER='less'
export BROWSER='brave'
export HOME='/home/arsonstan/'
export FZF_DEFAULT_OPTS='--height 40% --layout=reverse --border'


source $ZSH/oh-my-zsh.sh

#Autosuggestions
ZSH_AUTOSUGGEST_STRATEGY=(history completion) 
bindkey '^j' autosuggest-accept
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=yellow"

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

HISTFILE=~/.histfile
HISTSIZE=1000
SAVEHIST=1000

#Start zsh in vi mode : bind keys relavent to vi mode
#bindkey -v
#Start zsh in emacs mode : bind keys relavent to emacs mode
bindkey -e

ranger_cd() {
    temp_file="$(mktemp -t "ranger_cd.XXXXXXXXXX")"
    ranger --choosedir="$temp_file" -- "${@:-$PWD}"
    if chosen_dir="$(cat -- "$temp_file")" && [ -n "$chosen_dir" ] && [ "$chosen_dir" != "$PWD" ]; then
        cd -- "$chosen_dir"
    fi
    rm -f -- "$temp_file"
}

dict(){
	curl dict://dict.org/d:$1
}
weather() {
	curl wttr.in
}
rga_file() { #THIS IS A JUGAAD
#	rga -l $1 2>&1 1>/dev/null | awk '{if((NR-1)%5==0){print $0}}' | sed 's/..$//'
	rga $1  | awk 'BEGIN{FS=":"}{print $1}' | sort -u
}
duck_lynx()
{
	lynx -tna "https://lite.duckduckgo.com/lite?q=$*"
}
duck()
{
	w3m "https://lite.duckduckgo.com/lite?q=$*"
}
google_lynx()
{
	lynx -tna "https://www.google.com/search?q=$*"
}
google()
{
	w3m "https://www.google.com/search?q=$*"
}
ix() {
    local opts
    local OPTIND
    [ -f "$HOME/.netrc" ] && opts='-n'
    while getopts ":hd:i:n:" x; do
	case $x in
	    h) echo "ix [-d ID] [-i ID] [-n N] [opts]"; return;;
	    d) $echo curl $opts -X DELETE ix.io/$OPTARG; return;;
	    i) opts="$opts -X PUT"; local id="$OPTARG";;
	    n) opts="$opts -F read:1=$OPTARG";;
	esac
    done
    shift $(($OPTIND - 1))
    [ -t 0 ] && {
	local filename="$1"
	shift
	[ "$filename" ] && {
	    curl $opts -F f:1=@"$filename" $* ix.io/$id
	    return
	}
	echo "^C to cancel, ^D to send."
    }
    curl $opts -F f:1='<-' $* ix.io/$id
}
cheat() {
	curl cheat.sh/$1 | bat
}
shorturl () {
	curl -F'shorten='$1 https://0x0.st
}
ipinfo() {
	curl ipinfo.io/$1
}
launch() {
	nohup $* &>/dev/null &
}
transfer() {
    curl --progress-bar --upload-file "$1" https://transfer.sh/$(basename $1) | tee /dev/null;
}
imusic() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=40 cava
}
iquarium() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=25 asciiquarium
}
iclock() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=26 tty-clock -stc
}
inyan() { 
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=25 nyancat
}
ibonsai() { 
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=25 cbonsai -l
}
ifortune() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=37 bash -c "fortune | cowsay | lolcat"
}
icpu() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=26 bpytop -b 'cpu' 
}
imem() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=26 bpytop -b 'mem' 
}
iproc() {
	pkill perl
	pkill ttyd
	launch ttyd -t fontSize=26 bpytop -b 'proc' 
}
calc() {
	echo $1 | bc -l
}

function fman() {
    man -k . | fzf -q "$1" --prompt='man> '  --preview $'echo {} | tr -d \'()\' | awk \'{printf "%s ", $2} {print $1}\' | xargs -r man' | tr -d '()' | awk '{printf "%s ", $2} {print $1}' | xargs -r man
}

function yayin() {
    yay -Slq | fzf -q "$1" -m --preview 'yay -Si {1}'| xargs -ro yay -S
}
# Remove installed packages (change to pacman/AUR helper of your choice)
function yayre() {
    yay -Qq | fzf -q "$1" -m --preview 'yay -Qi {1}' | xargs -ro yay -Rns
}
function pacin() {
    pacman -Slq | fzf -q "$1" -m --preview 'yay -Si {1}'| xargs -ro yay -S
}
# Remove installed packages (change to pacman/AUR helper of your choice)
function pacre() {
    pacman -Qq | fzf -q "$1" -m --preview 'yay -Qi {1}' | xargs -ro yay -Rns
}
#Apply pywal theme
source /home/arsonstan/scripts/terminalcolor;
if [ $coloredterminals -eq 1 ]; then
	cat ~/.cache/wal/sequences 2>/dev/null &
fi

#Modify titlebar
if [[ -n $termtitle ]]; then
	ZSH_THEME_TERM_TITLE_IDLE="${termtitle}"
else
	ZSH_THEME_TERM_TITLE_IDLE="%~"
fi

eval "$(zoxide init zsh)"

#Fzf source
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#Root source
source /home/arsonstan/Projects/ROOT/root_install/bin/thisroot.sh
#Bitwarden completions
eval "$(bw completion --shell zsh); compdef _bw bw;"
#Source aliases
source ~/.alias
