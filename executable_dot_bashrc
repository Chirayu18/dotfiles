#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
PS1='[\u@\h \W]\$ '
alias wall=/home/arsonstan/.config/polybar/shapes/scripts/pywal.sh
alias ?="duck"
alias vi="nvim"
alias neofetch="neofetch --ascii"
rga-fzf() {
	RG_PREFIX="rga "
	local file
	file="$(
		FZF_DEFAULT_COMMAND="$RG_PREFIX '$1'" \
			fzf --sort --preview="[[ ! -z {} ]] && rga --pretty --context 5 {q} {}" \
				--phony -q "$1" \
				--bind "change:reload:$RG_PREFIX {q}" \
				--preview-window="70%:wrap"
	)" &&
	echo "opening $file" &&
	xdg-open "$file"
}
function duck()
{
	lynx -tna "https://lite.duckduckgo.com/lite?q=$*"
}
ix() {
    local opts
    local OPTIND
    [ -f "$HOME/.netrc" ] && opts='-n'
    while getopts ":hd:i:n:" x; do
	case $x in
	    h) echo "ix [-d ID] [-i ID] [-n N] [opts]"; return;;
	    d) $echo curl $opts -X DELETE ix.io/$OPTARG; return;;
	    i) opts="$opts -X PUT"; local id="$OPTARG";;
	    n) opts="$opts -F read:1=$OPTARG";;
	esac
    done
    shift $(($OPTIND - 1))
    [ -t 0 ] && {
	local filename="$1"
	shift
	[ "$filename" ] && {
	    curl $opts -F f:1=@"$filename" $* ix.io/$id
	    return
	}
	echo "^C to cancel, ^D to send."
    }
    curl $opts -F f:1='<-' $* ix.io/$id
}
export PATH=$HOME/.local/bin:/usr/local/bin:$HOME/scripts/:$HOME/Games/:$PATH
#Apply pywal theme
#(cat ~/.cache/wal/sequences &)

[ -f ~/.fzf.bash ] && source ~/.fzf.bash
